<?xml version='1.0' encoding='UTF-8' ?>
<!-- Created by Uniface - (C) Uniface B.V. All rights reserved -->
<!DOCTYPE UNIFACE PUBLIC "UNIFACE.DTD" "UNIFACE.DTD">
<UNIFACE release="9.6" xmlengine="2.0">
<TABLE>
<DSC name="ULIBR" model="DICT" system="S" pseudo ="73" level="1" noupdate="0"
 rbk="0" ffsql="0" transnr="0" segsize="0" ufocc="0" charset=".U">
<FLD name="ULIBRARY" seqno="1" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="101" />
<FLD name="UDESCR" seqno="2" type="S" level="2" pack="0" scale="0" length="25"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UTIMESTAMP" seqno="3" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
</DSC>
<OCC>
<DAT name="ULIBRARY">UFILE</DAT>
<DAT name="UTIMESTAMP">2015-02-09T07:57:38.00</DAT>
</OCC>
</TABLE>
<TABLE>
<DSC name="USOURCE" model="DICT" system="S" pseudo ="73" level="1" noupdate="0"
 rbk="0" ffsql="0" transnr="0" segsize="0" ufocc="500" charset=".U">
<FLD name="UTIMESTAMP" seqno="1" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UCOMPSTAMP" seqno="2" type="E" level="2" pack="0" scale="0" length="15"
 pointer="0" inum="0" ufocc="0" />
<FLD name="USTAT" seqno="3" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="USUB" seqno="4" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="2" ufocc="0" mandatory="yes" idxnum="1,2" idxsnr="101,1" />
<FLD name="UVAR" seqno="5" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="2" ufocc="0" mandatory="yes" idxnum="1,2" idxsnr="102,2" />
<FLD name="ULABEL" seqno="6" type="S" level="2" pack="0" scale="0" length="16"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="103" />
<FLD name="ULAN" seqno="7" type="S" level="2" pack="0" scale="0" length="3"
 pointer="0" inum="1" ufocc="0" mandatory="yes" idxnum="1" idxsnr="104" />
<FLD name="MSGTYPE" seqno="8" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UVERS" seqno="9" type="S" level="2" pack="0" scale="0" length="12"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UDESCR" seqno="10" type="S" level="2" pack="0" scale="0" length="25"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UVPOS" seqno="11" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UHPOS" seqno="12" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UVSIZ" seqno="13" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UHSIZ" seqno="14" type="S" level="2" pack="0" scale="0" length="6"
 pointer="0" inum="0" ufocc="0" />
<FLD name="AUTHORIZ" seqno="15" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UCLASS" seqno="16" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="LOCREF" seqno="17" type="S" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UCONFIRM" seqno="18" type="B" level="2" pack="0" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UAUDIO" seqno="19" type="N" level="2" pack="10" scale="0" length="1"
 pointer="0" inum="0" ufocc="0" />
<FLD name="UCOMMENT" seqno="20" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",0,0,0,,1,0,1,\1D,0,0,0,," />
<FLD name="UTEXT" seqno="21" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,1,\1E,0,0,0,,0,0,0,," />
<FLD name="UWLEVEL" seqno="22" type="S" level="2" pack="141" scale="0" length="0"
 pointer="0" inum="0" ufocc="0" varinfo=",1,0,2,\1F\C1,0,0,0,,0,0,0,," />
</DSC>
<OCC>
<DAT name="UTIMESTAMP">2015-02-09T08:02:36.00</DAT>
<DAT name="USUB">I</DAT>
<DAT name="UVAR">UFILE</DAT>
<DAT name="ULABEL">IP_ADD_SLASH</DAT>
<DAT name="ULAN">P</DAT>
<DAT name="UTEXT" xml:space='preserve'>entry IP_ADD_SLASH
   ; add the file separator to the end of the string 
   params 
      string p_separator : in
      string p_root      : inout
   endparams 
   variables 
      numeric v_length
      string v_char
   endvariables 
   
   ; see if the root folder has a \ or a /
   v_length = $length(p_root)
   v_char = p_root[v_length]
   if (v_char != p_separator)
      p_root = $concat(p_root, p_separator)
   endif

   return(0)
end ; IP_ADD_SLASH
</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2015-02-09T08:02:36.00</DAT>
<DAT name="USUB">I</DAT>
<DAT name="UVAR">UFILE</DAT>
<DAT name="ULABEL">IP_CRE_FOLDER</DAT>
<DAT name="ULAN">P</DAT>
<DAT name="UTEXT" xml:space='preserve'>;**********************
entry IP_CRE_FOLDER
;**********************
   ; this function creates the folder in the root file.

   ; p_root   - the root folder the folder is supposed to be created in. Root must be closed by either a / or a \
   ; p_folder - the folder that needs to be created. Folder must not end with \ or / 
   params
      string p_root   : in 
      string p_folder : in
   endparams

   ; create the name 
   call IP_CRE_FOLDERNM(p_root, p_folder, p_root)

   ; create the folder
   if ($lfileexists(p_root) = 0)
      ldircreate p_root
   endif 

   return(0)
end ; create_folders</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2015-02-09T08:02:36.00</DAT>
<DAT name="USUB">I</DAT>
<DAT name="UVAR">UFILE</DAT>
<DAT name="ULABEL">IP_CRE_FOLDERNM</DAT>
<DAT name="ULAN">P</DAT>
<DAT name="UTEXT" xml:space='preserve'>;**********************
entry IP_CRE_FOLDERNM
;**********************
   ; this function creates the folder in the root folder.
   ; p_root       - the root folder the folder is supposed to be created in. Root must be closed by either a / or a \
   ; p_folder     - the folder that needs to be created. Folder must not end with \ or /
   ; p_foldername - the return value of both root and folder
   params
      string p_root       : in 
      string p_folder     : in
      string p_foldername : out
   endparams
   variables
      string v_separator
   endvariables 

   ; init 
   call IP_GET_SLASHES(v_separator)
   #include UGENERAL:IP_ERR_CALL

   ; see if the root folder has a \ or a /
   call IP_ADD_SLASH(v_separator, p_root)
   #include UGENERAL:IP_ERR_CALL
   
   p_foldername = $concat(p_root, p_folder)

   return(0)
end ; create_folders
</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2015-02-18T08:46:05.00</DAT>
<DAT name="USUB">I</DAT>
<DAT name="UVAR">UFILE</DAT>
<DAT name="ULABEL">IP_FOLDEREXISTS</DAT>
<DAT name="ULAN">P</DAT>
<DAT name="UDESCR" xml:space='preserve'>Check if folder exists</DAT>
<DAT name="UTEXT" xml:space='preserve'>entry IP_FOLDEREXISTS
   returns boolean
   params 
      string p_nmfolder
   endparams 

   if ($ldirlist(p_nmfolder, "dir"))
      return 1
   else 
      return 0
   endif
end ; IP_FOLDEREXISTS</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2015-10-22T15:39:12.00</DAT>
<DAT name="USUB">I</DAT>
<DAT name="UVAR">UFILE</DAT>
<DAT name="ULABEL">IP_GET_EXTENSION</DAT>
<DAT name="ULAN">P</DAT>
<DAT name="UDESCR" xml:space='preserve'>Get the file extension</DAT>
<DAT name="UTEXT" xml:space='preserve'>entry IP_GET_EXTENSION
   returns string 
   params 
      string p_nmfile : in 
   endparams 
   variables 
      numeric v_i
   endvariables 

   v_i = $rscan (p_nmfile, ".")
   if (v_i &gt; 0) 
      p_nmfile = p_nmfile[v_i + 1]
   else 
      p_nmfile = ""   
   endif 

   return p_nmfile
end ; IP_GET_EXTENSION</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2015-02-09T08:02:36.00</DAT>
<DAT name="USUB">I</DAT>
<DAT name="UVAR">UFILE</DAT>
<DAT name="ULABEL">IP_GET_SLASHES</DAT>
<DAT name="ULAN">P</DAT>
<DAT name="UTEXT" xml:space='preserve'>entry IP_GET_SLASHES
   ; determine if the file separator is a / or a \
   params 
      string p_separator : out 
   endparams 
   variables 
      string v_root
   endvariables 
   
   v_root = $ldir()

   ; determine the seperator
   if ($scan(v_root, "/") &gt; 0)
      p_separator = "/"
   endif 
   if ($scan(v_root, "\") &gt; 0)
      p_separator = "\"
   endif   

   return(0)
end ; IP_GET_SLASHES
</DAT>
</OCC>
<OCC>
<DAT name="UTIMESTAMP">2015-02-09T08:02:36.00</DAT>
<DAT name="USUB">I</DAT>
<DAT name="UVAR">UFILE</DAT>
<DAT name="ULABEL">IP_REP_SEPERATOR</DAT>
<DAT name="ULAN">P</DAT>
<DAT name="UTEXT" xml:space='preserve'>;entry IP_REPLACE_SEPERATOR
entry IP_REP_SEPERATOR
   ; replace the file separator with the other one 
   params 
      string p_root : inout
   endparams 
   variables 
      string v_separator
   endvariables 

   call IP_GET_SLASHES(v_separator)

   if (v_separator = "/")
      p_root = $replace(p_root, 1, "\", v_separator, -1)
   endif 
   if (v_separator = "\")
      p_root = $replace(p_root, 1, "/", v_separator, -1)
   endif 
end ; IP_REPLACE_SEPERATOR</DAT>
</OCC>
</TABLE>
</UNIFACE>
